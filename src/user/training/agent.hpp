#pragma once
#include "engine/engine.hpp"

#include "user/training/genome.hpp"


struct Agent : public pez::core::Entity
{
    /// ===== Attributes =====
    /// The genome of this agent
    pez::core::ID genome_id;
    /// The network generated by the genome
    nt::Network<conf::input_count, conf::output_count> network;
    /// The walker that will be controlled by this agent
    Walker walker;

    /// ===== Methods =====
    Agent() = default;

    explicit
    Agent(pez::core::EntityID id_)
        : pez::core::Entity{id_}
        , genome_id{pez::core::EntityID::INVALID_ID}
    {}

    void updateNetwork()
    {
        network = pez::core::get<Genome>(genome_id).genome.generateNetwork();
    }
};
